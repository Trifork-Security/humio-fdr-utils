# This is a basic workflow to help you get started with Actions

name: release

# Controls when the workflow will run
on:
  push:
    tags:
      - 'v*'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set tag_version number
        run: |
          echo "TAG_VERSION=$(echo ${{ github.event.ref }} | cut -d'/' -f 3)" >> $GITHUB_ENV

      - name: Set version number
        run: |
          echo "VERSION=$(echo $TAG_VERSION | cut -c 2-)" >> $GITHUB_ENV

      - name: Replace README
        run: |
          mv PKG_README.md README.md

      - name: Set version in manifest.yaml
        run: |
          sed -i "s/\${VERSION}/${{ env.VERSION }}/" manifest.yaml

      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip -r pkg.zip */*.yaml data/* README.md manifest.yaml -x .*

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_VERSION }}
          release_name: Release ${{ env.TAG_VERSION }}
          draft: false
          prerelease: false
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./pkg.zip
          asset_name: ${{ github.event.repository.name }}-${{ env.VERSION }}.zip
          asset_content_type: application/zip
